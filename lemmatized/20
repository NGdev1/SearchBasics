   Software   Occlusion   Culling   график   статья   программирование   игра   новость   статья   код   арт   дизайн   индустрия   подсказка   термин   FAQ   страница   сообщество   форум   качалка   участник   пользователь   темный   тема   публикация   проект   форум   работа   входить   программированиестатьиграфика   Software   Occlusion   Culling   автор   kas   оклюдить   кулинг   сейчас   наверное   нет   только   у   ленивый   некоторый   использовать   HW   OC   у   который   быть   очевидный   недостаток   в   вид   латентность   и   дополнительный   нагрузка   на   GPU   другой   использовать   софтовый   растеризация   к   пример   мы   мочь   растеризовать   глубина   близлежащий   оклюдер   специальный   или   прямо   рендер   геометрия   затем   проверять   баунд   бокс   отрисовывать   объект   относительно   этот   глубина   радость   от   такой   подход   мочь   быть   несколько   во   первый   мы   мочь   рисовать   это   все   в   уменьшать   разрешение   во   второй   такой   отрисовка   достаточно   легко   параллелиться   на   несколько   поток   что   в   наш   время   непрерывный   увеличение   число   ядро   у   CPU   являться   приятный   бонус   для   растеризация   быть   два   основной   алгоритм   сканлайн   и   халфспейс   при   использование   сканлайн   мы   просто   рисовать   горизонтальный   линия   между   ребро   треугольник   при   использование   халфспейс   строить   вьюпорт   спейс   баунд   рект   треугольник   итерироваться   по   весь   пиксел   который   в   он   и   если   пиксел   внутри   треугольник   то   рисовать   оно   но   в   целое   мы   достаточно   определять   сам   факт   то   скрытый   ли   текстурировать   геометрия   оклюдер   или   нет   тут   вот   на   форум   петя   предлагать   крутой   техника   оклюдить   кулинг   принцип   простой   мы   хотеть   записывать   тестировать   максимальный   количество   пиксел   треугольник   за   такт   работа   внутренний   цикл   растеризатор   с   один   сторона   с   другой   сторона   мы   в   общий   то   не   нужный   информация   о   глубина   каждый   пиксел   в   оклюжный   буфер   достаточно   знать   находиться   ли   в   этот   пиксел   оклюдер   или   нет   один   битик   хватить   за   глаз   в   традиционный   софтовой   оклюдер   сначала   отрисовываться   весь   оклюдер   и   лишь   затем   проверяться   тест   геометрия   мы   такой   подход   не   подходить   по   понятный   причина   мы   приходиться   сортировать   весь   треугольник   по   Z   минимальный   Z   для   тест   геометрия   и   максимальный   Z   для   оклюдер   геометрия   и   только   потом   рисовать   зато   после   сортировка   использовать   SSE   мы   мочь   писать   тестировать   аж   128   пиксел   за   итерация   внутренний   цикл   растеризатор   в   связь   с   то   что   мы   мочь   писать   фиксировать   количество   пиксел   за   шаг   иметь   смысл   разбивать   оклюжный   буфер   на   тайл   ширина   SSE   регистр   естественный   образ   задавать   ширина   тайл   высота   мочь   быть   выбирать   произвольный   мой   реализация   работать   примерно   так   трансформировать   баунд   бокс   объект   оклюдер   тестировать   геометрия   в   пространство   вьюпорт   определять   необходимо   ли   отсекать   треугольник   а   также   граница   тайл   в   который   этот   объект   лежаттрансформировать   вершина   в   пространство   вьюпорт   при   необходимость   клипать   записывать   трансформировать   треугольник   в   глобальный   список   а   в   каждый   тайл   который   этот   треугольник   касаться   сохранять   его   индекс   треугольник   хранить   в   SoA   стиль   по   4   также   на   этот   шаг   считать   маска   для   удаление   backfacing   треугольник   после   то   как   весь   объект   быть   оттрансформировать   и   добавлять   в   тайл   для   каждый   тайл   производиться   сортировка   его   список   треугольник   отрисовываться   отсортировывать   список   треугольник   OR   сканлайн   треугольник   со   сканлайн   оклюдить   буфер   тайл   для   оклюдер   треугольник   для   тест   треугольник   проверка   что   хотя   бы   один   из   пиксел   сканлайн   видный   в   общий   то   базовый   версия   алгоритм   несложно   реализовывать   и   проверять   сам   мой   текущий   имплементация   мочь   рисовать   300к   треугольник   снапшот   с   игровой   камера   Death   Track   примерно   за   20мсек   12   мсек   трансформаци   8   мсек   растеризация   в   720п   что   неплохо   и   надо   понимать   что   это   однопоточный   синхронный   версия   думать   на   архитектура   с   большой   число   регистр   быть   чуть   хороший   если   прикручивать   поток   опять   же   думать   становиться   ощутимо   хорошо   очень   органично   ложиться   на   концепция   Job   Manager   интересный   также   выглядеть   попытка   автоматический   генерация   оклюдер   и   тест   геометрия   респект   и   уважуха   петя   за   крутой   идея   и   обсуждение   деталь   реализация   пример   реализация   с   исходник   реализация   Software   Occlusion   Culling   occlusion   3   апрель   2011   комментарий   134   убирать   реклама   instagram   likes   kopen   контакт   сообщество   участник   каталог   сайт   категория   архив   новость   GameDev   ru   разработка   игра   2001   2019