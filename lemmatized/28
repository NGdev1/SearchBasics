   вставка   один   поверхность   в   другой   многопоточный   алгоритм   график   статья   программирование   игра   новость   статья   код   арт   дизайн   индустрия   подсказка   термин   faq   страница   сообщество   форум   качалка   участник   пользователь   темный   тема   публикация   проект   форум   работа   входить   программированиестатьиграфика   вставка   один   поверхность   в   другой   многопоточный   алгоритм   автор   роман   сорокин   в   статья   рассматриваться   метод   встраивание   один   поверхность   в   другой   данный   статья   иметь   некоторый   нечеткий   определение   и   в   она   не   гарантироваться   работа   метод   на   любой   геометрия   она   носить   скоро   исследовательский   и   теоретический   характер   но   возможный   и   это   кто   то   помогать   постановка   задача   решение   замечание   постановка   задача   по   условие   у   мы   быть   два   поверхность   один   исходный   в   который   быть   вставляться   новый   поверхность   и   соответственно   второй   который   вставляться   для   то   чтобы   быть   хорошо   понятно   можно   приводить   такой   пример   песок   изначальный   поверхность   след   это   второй   поверхность   который   врезаться   в   первый   некий   подобие   csg   вычитание   быть   некоторый   неконкретность   в   определение   первый   поверхность   она   должный   быть   достаточно   гладкий   и   размер   ее   минимальный   элемент   должный   быть   сравнимый   с   размер   элемент   врезать   поверхность   врезать   поверхность   представлять   из   себя   некоторый   геометрия   у   который   быть   выпуклый   замкнутый   контур   по   который   и   быть   проходить   соединение   этот   основной   требование   к   врезать   геометрия   применяться   данный   метод   мочь   как   для   некоторый   подобие   вычитание   в   csg   так   и   для   уточнение   поверхность   при   приближение   тип   тесселяция   вот   пример   то   как   это   мочь   выглядеть   решение   для   начало   сделать   простой   решение   который   работать   последовательно   1   нужно   на   исходный   меш   начерчивать   контур   врезать   меш   2   далеко   выкидывать   ненужный   треугольник   получать   два   контур   один   из   который   выпуклый   3   нужно   соединять   этот   два   контур   триангулировать   4   добавлять   треугольник   и   вершина   врезать   меш   к   основной   месить   5   использование   нормаль   для   восстановление   объем   6   тоже   самый   но   нормаль   инвертировать   вводить   некоторый   обозначение   м1   исходный   поверхность   м2   врезать   поверхность   к1   контур   образовываться   при   выкидывание   полигон   из   м1   для   вставка   в   он   м2   к2   замкнутый   выпуклый   контур   м2   сначала   чертить   контур   для   это   использоваться   поверхность   у   который   каждый   треугольник   содержать   номер   сосед   соответственно   мы   этот   свойство   нужно   быть   сохранять   при   врезание   новый   поверхность   для   упрощение   реализация   точка   не   мочь   проходить   через   вершина   также   в   конец   мы   не   быть   оставлять   точка   на   ребро   для   простота   решение   движение   точка   задаваться   плоскость   в   который   этот   точка   двигаться   пересечение   данный   плоскость   и   наш   исходный   меш   как   раз   давать   путь   проходить   точка   изначально   выбираться   стартовый   точка   на   исходный   поверхность   из   который   начинать   двигаться   весь   точка   далеко   для   каждый   точка   задаваться   плоскость   в   который   она   двигаться   и   расстояние   на   который   она   должный   отходить   напоминать   полярный   система   координата   выкидывание   ненужный   элемент   очень   удобно   сделать   после   триангуляция   контур   во   время   триангуляция   мы   получать   ненужный   элемент   поэтому   переходить   к   третий   шаг   соединять   сначала   только   ребро   к2   с   к1   для   это   быть   использовать   то   что   мы   уметь   двигаться   по   поверхность   и   сам   топология   поверхность   для   каждый   ребро   во   врезать   контур   к2   идти   от   точка   a   к   b   по   путь   собирать   информация   о   пересекать   ребро   м1   здесь   мочь   быть   два   случай   пересекать   ребро   нет   и   они   быть   случай   достаточно   сильно   различаться   1   для   то   чтобы   построить   треугольник   искать   пересечение   линия   ab   c   треугольник   в   который   она   лежать   далеко   использовать   то   что   весь   треугольник   ориентировать   против   часовой   стрелка   находить   точка   c   который   и   давать   подходящий   треугольник   2   теперь   использовать   ребро   который   пересекать   чтобы   построить   новый   треугольник   надеяться   из   рисунок   все   понятно   однако   теперь   мочь   оставаться   несоединенный   вершина   к2   с   ребро   к1   здесь   опять   же   возможный   три   ситуация   0   1   2   три   новый   треугольник   но   во   все   у   мы   один   точка   лежать   внутри   треугольник   и   дотриангулировать   не   проблематичный   карандаш   помечать   треугольник   получать   на   предыдущий   операция   еще   мы   нужно   сохранять   построить   сосед   у   новый   треугольник   во   время   проход   по   ребро   сосед   очевидный   образ   строиться   использовать   текущий   топология   во   время   проход   триангуляция   по   вершина   мы   использовать   информация   из   прилежащий   ребро   туда   мы   она   записывать   во   время   проход   по   ребро   каждый   ребро   запоминать   свой   первый   треугольник   и   последний   также   во   время   этот   проход   мы   мочь   помечать   треугольник   по   который   проходиться   контур   к2   они   подлежать   выкидывание   кроме   то   мы   мочь   построить   треугольник   который   ограничивать   контур   на   рисунок   изображать   карандаш   они   строиться   например   как   соседний   для   треугольник   у   который   один   вершина   внутри   контур   к2   либо   как   соседний   для   треугольник   у   который   нет   вершина   внутри   к2   это   случай   когда   к2   пересекать   один   и   тоже   ребро   треугольник   дважды   иметь   треугольник   который   попадать   под   контур   и   ограничивать   треугольник   мы   мочь   сделать   заливка   по   треугольник   использовать   сосед   который   у   мы   храниться   и   получать   весь   треугольник   который   нужно   выкидывать   теперь   как   все   это   дело   распараллеливать   видно   что   операция   пробегание   один   вершина   по   поверхность   не   зависеть   от   остальной   поэтому   мы   мочь   весь   вершина   бежать   параллельно   операция   триангуляция   при   проход   по   ребро   также   не   зависеть   от   другой   ребро   однако   при   проход   по   вершина   мы   должный   знать   информация   храниться   в   соседний   ребро   поэтому   необходимо   дождаться   пока   все   ребро   обрабатываться   теперь   вершина   также   обрабатываться   независимо   последний   шаг   с   заливка   также   легко   реализоваться   многопоточно   в   каждый   поток   идти   заливка   использовать   только   еще   не   обрабатывать   треугольник   использовать   атомарный   операция   такой   образ   видно   что   количество   поток   удобно   сделать   равный   число   граничный   ребро   вершина   у   врезать   контур   остальной   вершина   не   контурный   и   треугольник   удобно   распределять   примерно   одинаково   по   поток   псевдокод   выглядеть   так   foreach   граничный   вершина   ребро   каждый   вершина   находить   свой   позиция   строить   контур   на   поверхность   присоединять   новый   вершина   и   треугольник   относиться   к   данный   граничный   вершина   barrier   синхронизация   проход   триангуляция   по   ребро   barrier   проход   триангуляция   по   вершина   barrier   заливка   ненужный   треугольник   многопоточный   реализация   использовать   opengl   4   3   compute   shaders   и   ssbo   для   запись   из   шейдер   в   видеопамять   плюс   еще   конечно   атомарный   счетчик   и   атомарный   операция   над   ssbo   ниже   давать   приблизительный   график   как   версия   алгоритм   для   cpu   так   и   gpu   не   оптимизировать   кроме   то   версия   для   gpu   оказываться   очень   тяжелый   там   много   длинный   условный   ветка   и   тд   тестирование   проводиться   на   ноут   с   cpu   intel   core   i5   4258u   2   4ггц   gpu   intel   iris   5100   первый   строка   35   количество   граничный   ребро   вершина   кол   ву   поток   на   gpu   246   общий   число   вершина   в   м2   455   общий   число   треугольник   в   м2   время   указывать   в   микросекунда   для   загрузка   на   gpu   использоваться   функция   glmapbuffer   35   246   455   70   1401   2730   140   5531   10920   280   21981   43680   300   1298   4056   28345   cpu   30512   52395   120853   402540   cpu   загрузка   на   gpu   696   1409   2163   4504   gpu   замечание   данный   метод   иметь   некоторый   значимый   недостаток   наиболее   важный   то   что   прирост   в   производительность   замечать   только   на   достаточно   большой   значение   это   значить   что   метод   не   подходить   для   игра   где   весь   таки   использоваться   модель   с   меньший   полигональность   с   другой   сторона   он   не   являться   точный   и   не   подходить   для   что   то   другой   для   улучшение   алгоритм   нужно   придумывать   как   эффективно   делать   непрерывный   переход   между   поверхность   в   качество   направление   движение   точка   по   поверхность   можно   использовать   не   плоскость   а   uv   координата   по   идея   должно   все   работать   и   быть   более   управлять   и   красиво   исходный   поверхность   мочь   быть   легко   восстанавливать   использовать   выкидывать   треугольник   в   они   оставаться   информация   о   сосед   и   они   мочь   рассказывать   они   я   твой   новый   сосед   процедура   соединение   ребро   к2   с   к1   мочь   быть   изменять   я   делать   вариант   точный   совпадение   к2   с   м1   но   получаться   много   треугольник   очень   помогать   геометрический   шейдер   для   проверка   правильность   построение   новый   сосед   маленький   треугольник   показывать   соседство   вот   небольшой   демо   geometry   modification   opengl   9   сентябрь   2015   обновление   11   сено   2015   комментарий   28   убирать   реклама   контакт   сообщество   участник   каталог   сайт   категория   архив   новость   gamedev   ru   разработка   игра   2001   2019